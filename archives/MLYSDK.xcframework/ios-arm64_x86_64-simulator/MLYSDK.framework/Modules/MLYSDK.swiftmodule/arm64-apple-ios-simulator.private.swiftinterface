// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
// swift-module-flags: -target arm64-apple-ios14.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name MLYSDK
// swift-module-flags-ignorable: -enable-bare-slash-regex
import AVFoundation
import AVKit
import CommonCrypto
import CoreTelephony
import CryptoKit
import Foundation
import GCDWebServer
@_exported import MLYSDK
import MUXSDKStats
import Sentry
import Swift
import _Concurrency
import _StringProcessing
public class MLYAVPlayerPlugin {
  public var adapter: MLYSDK.MLYAVPlayerAdapter?
  public init()
  public func adapt(_ playerViewController: AVKit.AVPlayerViewController? = nil)
  public func buildPlayerItem(url: Foundation.URL) throws -> AVFoundation.AVPlayerItem
  public func play(url: Foundation.URL) throws
  @objc deinit
  @objc public func notifyPlayerItemNewAccessLogEntry()
}
public class MLYAVPlayerAdapter {
  public init(_ playerLayer: AVFoundation.AVPlayerLayer? = nil, _ playerViewController: AVKit.AVPlayerViewController? = nil)
  @objc deinit
}
public class MLYDriverOptions {
  public var client: MLYSDK.MLYClientOptions
  public var server: MLYSDK.MLYServerOptions
  public var debug: Swift.Bool
  public init()
  @objc deinit
}
public struct MLYClientOptions {
  public var id: Swift.String?
}
public struct MLYServerOptions {
  public var host: MLYSDK.MLYServerSetting
}
public struct MLYServerSetting {
  public var fqdn: Swift.String?
}
@_hasMissingDesignatedInitializers public class Point : Swift.Codable, Swift.CustomStringConvertible {
  public var description: Swift.String {
    get
  }
  public var x: Swift.String
  public var y: Swift.Int64
  @objc deinit
  public func encode(to encoder: Swift.Encoder) throws
  required public init(from decoder: Swift.Decoder) throws
}
@_hasMissingDesignatedInitializers public class MLYChart {
  public static var chart: [Swift.String : [MLYSDK.MLYCharPoint]]
  public static var chartScore: [Swift.String : [MLYSDK.MLYCharPoint]]
  @objc deinit
}
@_hasMissingDesignatedInitializers public class MLYCharPoint : Swift.Codable, Swift.CustomStringConvertible {
  public var description: Swift.String {
    get
  }
  public var char_x: Swift.String
  public var char_y: Swift.Double
  @objc deinit
  public func encode(to encoder: Swift.Encoder) throws
  required public init(from decoder: Swift.Decoder) throws
}
public class MLYDriver {
  public static let VERSION: Swift.String
  public init()
  public static func initialize(options: MLYSDK.MLYDriverOptions) throws
  public static func initialize(_ callback: (MLYSDK.MLYDriverOptions) -> ()) throws
  #if compiler(>=5.3) && $AsyncAwait
  public static func ready() async
  #endif
  public static func activate() throws
  public static func deactivate()
  @objc deinit
}
@_hasMissingDesignatedInitializers public class ProxyURLModifier {
  public static func replace(_ url: Swift.String) throws -> Foundation.URL
  @objc deinit
}
public enum ProxyURLModifierError : Swift.Error {
  case IllegalURLFormat
  case ExceptionInInitializerError
  public static func == (a: MLYSDK.ProxyURLModifierError, b: MLYSDK.ProxyURLModifierError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension MLYSDK.ProxyURLModifierError : Swift.Equatable {}
extension MLYSDK.ProxyURLModifierError : Swift.Hashable {}
